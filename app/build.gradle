apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'
//apply plugin: 'com.jakewharton.butterknife'


def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyfile = file('s.keystore.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyfile = file(keystoreFilepath)
}


android {
    signingConfigs {
        pro {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            storeFile keyfile
            storePassword keystorePSW
        }
//        pro {
//            keyAlias 'coolapp'
//            keyPassword '123456'
//            storeFile file('D:/workspace/Android/ToGithubProjects/IvyApp/coolapp.jks')
//            storePassword '123456'
//        }
        dev {
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.ivy.ivyapp"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.pro
            //签名文件存在，则签名
            if (keyfile.exists()) {
                println("WITH -> buildTypes -> release: using jks key")
                signingConfig signingConfigs.pro
            } else {
                println("WITH -> buildTypes -> release: using default key")
            }
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.android.support:support-fragment:26.1.0'
    }
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
//        main {
//            assets.srcDirs = ['assets']
//        }
    }
    // 网上
//    dexOptions {
//        incremental true
//        preDexLibraries = false
//        jumboMode = true
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:26.1.0'
    //Logger
    //    implementation 'com.orhanobut:logger:2.2.0'
    //ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //AHBottomNavigation
    compile 'com.aurelhubert:ahbottomnavigation:2.1.0'
    // 引入自定义的包
    compile project(':common_library')
    //bmob-sdk
    //    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    //        compile 'cn.bmob.android:bmob-sdk:3.5.5'
    //    compile('com.squareup.okhttp3:okhttp:3.10.0') {
    //        exclude(module: 'okhttp3')
    //    }
    //    compile('cn.bmob.android:bmob-sdk:3.5.5') {
    //        exclude (module: 'okhttp3')
    //    }
    compile 'com.android.support:multidex:1.0.1'
}